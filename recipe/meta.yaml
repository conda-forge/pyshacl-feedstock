{% set min_python = "python >=3.8.1" %}
{% set version = "0.25.0" %}
# upstream supports 3.7 (dropped by conda-forge), but introduces pins that can't
# be solved without losing noarch: python
{% set min_python = "python >=3.8.1" %}

package:
  name: pyshacl-split
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/p/pyshacl/pyshacl-{{ version }}.tar.gz
  sha256: 91e87ed04ccb29aa47abfcf8a3e172d35a8831fce23a011cfbf35534ce4c940b
  patches:
    # see https://github.com/RDFLib/pySHACL/pull/214
    - 0000-loosen-importlib-metadata.diff

build:
  noarch: python
  number: 0

requirements:
  host:
    - {{ min_python }}
  run:
    - {{ min_python }}

outputs:
  - name: pyshacl
    build:
      noarch: python
      script:
        # poetry puts stuff all over
        {% set remove_from_sp_dir = [
          "CHANGELOG.md",
          "CONTRIBUTING.md",
          "CONTRIBUTORS.md",
          "FEATURES.md",
          "LICENSE.txt",
          "README.md",
        ] %}
        - {{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation
        - |-
          {{ PYTHON }} -c "import os, pathlib; sp = pathlib.Path(os.environ['SP_DIR']); [(sp / f).unlink() for f in {{ remove_from_sp_dir }}]"
      entry_points:
        - pyshacl = pyshacl.cli:main
        - pyshacl_server = pyshacl.http:cli
        - pyshacl_validate = pyshacl.cli:main
    requirements:
      host:
        - {{ min_python }}
        - pip
        - poetry-core >=1.8.1,<2
      run:
        - {{ min_python }}
        - html5lib >=1.1,<2
        - owlrl >=6.0.2,<7
        - packaging >=21.3
        - prettytable >=3.7.0
        - rdflib >=6.3.2,<8
    test:
      requires:
        - pip
      imports:
        - pyshacl
      commands:
        - pip check
        - pyshacl --help
    about:
      home: https://github.com/RDFLib/pySHACL
      license: Apache-2.0
      license_family: APACHE
      license_file: LICENSE.txt
      summary: A Python validator for SHACL
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.

  - name: pyshacl-with-http
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ pin_subpackage("pyshacl", max_pin="x.x.x") }}
        - {{ min_python }}
        - sanic >=22.12,<23
        - sanic-ext >=23.3,<23.6
        - sanic-cors ==2.2.0.*
    test:
      requires:
        - pip
      imports:
        - pyshacl
      commands:
        - pip check
        - pyshacl --help
    about:
      home: https://github.com/RDFLib/pySHACL
      license: Apache-2.0
      license_family: APACHE
      license_file: LICENSE.txt
      summary: A Python validator for SHACL (with http extra)
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.

  - name: pyshacl-with-js
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("pyshacl", max_pin="x.x.x") }}
        - pyduktape2 >=0.4.3,<0.5.0
    test:
      requires:
        - pip
      imports:
        - pyshacl
      commands:
        - pip check
        - pyshacl --help
    about:
      home: https://github.com/RDFLib/pySHACL
      license: Apache-2.0
      license_family: APACHE
      license_file: LICENSE.txt
      summary: A Python validator for SHACL (with js extra)
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.

  - name: pyshacl-with-all
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("pyshacl-with-http", max_pin="x.x.x") }}
        - {{ pin_subpackage("pyshacl-with-js", max_pin="x.x.x") }}
        - {{ pin_subpackage("pyshacl", max_pin="x.x.x") }}
    test:
      source_files:
        - test
      requires:
        - pip
        - pytest-cov
      imports:
        - pyshacl
      commands:
        - pip check
        - pyshacl --help
        - pytest -vv --color=yes --tb=long --cov-fail-under=72 --cov-branch --cov=pyshacl --cov-report=term-missing:skip-covered --no-cov-on-fail -k "not owl_imports"
    about:
      home: https://github.com/RDFLib/pySHACL
      license: Apache-2.0
      license_family: APACHE
      license_file: LICENSE.txt
      summary: A Python validator for SHACL (with all extra)
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.

about:
  home: https://github.com/RDFLib/pySHACL
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.txt
  summary: A Python validator for SHACL
  description: |
    This is a pure Python module which allows for the validation of RDF graphs
    against Shapes Constraint Language (SHACL) graphs. This module uses the
    rdflib Python library for working with RDF and is dependent on the OWL-RL
    Python module for OWL2 RL Profile-based expansion of data graphs.

extra:
  feedstock-name: pyshacl
  recipe-maintainers:
    - bollwyvl
    - satra
