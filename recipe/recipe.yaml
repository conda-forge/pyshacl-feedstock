# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "0.30.1"
  PYTHON: ${{ PYTHON | default("$PYTHON") }}

recipe:
  name: pyshacl
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/p/pyshacl/pyshacl-${{ version }}.tar.gz
  sha256: df712ac961b1ee7bcf0b27fa71ecab7785a135b2af69783ce30cb05fe41bcaf5

build:
  number: 0
  noarch: python

outputs:
  - package:
      name: pyshacl
    build:
      script:
        - ${{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation --disable-pip-version-check
        - cd ${{ RECIPE_DIR }} && ${{ PYTHON }} clean_site_packages.py
      python:
        entry_points:
          - pyshacl = pyshacl.cli:main
          - pyshacl_rules = pyshacl.cli_rules:main
          - pyshacl_server = pyshacl.http:cli
          - pyshacl_validate = pyshacl.cli:main
    requirements:
      host:
        - pip
        - poetry-core >=2,<3
        - python ${{ python_min }}.*
      run:
        - importlib-metadata >6
        - owlrl >=7.1.2,<8
        - packaging >=21.3
        - prettytable >=3.7.0
        - python >=${{ python_min }}
        - rdflib-with-html >=7.1.1,<8
    tests:
      - python:
          pip_check: true
          python_version: ${{ python_min }}.*
          imports:
            - pyshacl
      - requirements:
          run:
            - python ${{ python_min }}.*
        script:
          - pyshacl --help

  - package:
      name: pyshacl-with-http
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("pyshacl", upper_bound="x.x.x") }}
        - sanic >=22.12,<23
        - sanic-cors 2.2.0.*
        - sanic-ext >=23.3,<23.6
    tests:
      - python:
          pip_check: true
          python_version: ${{ python_min }}.*
          imports:
            - pyshacl
      - requirements:
          run:
            - python ${{ python_min }}.*
        script:
          - pyshacl --help
    about:
      license: Apache-2.0
      license_file: LICENSE.txt
      summary: A Python validator for SHACL (with http extra)
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.
      homepage: https://github.com/RDFLib/pySHACL

  - package:
      name: pyshacl-with-js
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("pyshacl", upper_bound="x.x.x") }}
        - pyduktape2 >=0.4.6,<1
    tests:
      - python:
          pip_check: true
          python_version: ${{ python_min }}.*
          imports:
            - pyshacl
      - requirements:
          run:
            - python ${{ python_min }}.*
        script:
          - pyshacl --help
    about:
      license: Apache-2.0
      license_file: LICENSE.txt
      summary: A Python validator for SHACL (with js extra)
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.
      homepage: https://github.com/RDFLib/pySHACL

  - package:
      name: pyshacl-with-all
    build:
      noarch: generic
    requirements:
      run:
        - ${{ pin_subpackage("pyshacl-with-http", upper_bound="x.x.x") }}
        - ${{ pin_subpackage("pyshacl-with-js", upper_bound="x.x.x") }}
        - ${{ pin_subpackage("pyshacl", upper_bound="x.x.x") }}
    tests:
      - python:
          pip_check: true
          python_version: ${{ python_min }}.*
          imports:
            - pyshacl
      - files:
          source:
            - test/
        requirements:
          run:
            - python ${{ python_min }}.*
            - pytest-cov
        script:
          - pyshacl --help
          - coverage run --branch --source=pyshacl -m pytest -vv --color=yes --tb=long -k "not owl_imports"
          - coverage report --show-missing --skip-covered --fail-under=71
    about:
      license: Apache-2.0
      license_file: LICENSE.txt
      summary: A Python validator for SHACL (with all extra)
      description: |
        This is a pure Python module which allows for the validation of RDF graphs
        against Shapes Constraint Language (SHACL) graphs. This module uses the
        rdflib Python library for working with RDF and is dependent on the OWL-RL
        Python module for OWL2 RL Profile-based expansion of data graphs.
      homepage: https://github.com/RDFLib/pySHACL

about:
  license: Apache-2.0
  license_file: LICENSE.txt
  summary: A Python validator for SHACL
  description: |
    This is a pure Python module which allows for the validation of RDF graphs
    against Shapes Constraint Language (SHACL) graphs. This module uses the
    rdflib Python library for working with RDF and is dependent on the OWL-RL
    Python module for OWL2 RL Profile-based expansion of data graphs.
  homepage: https://github.com/RDFLib/pySHACL

extra:
  feedstock-name: pyshacl
  recipe-maintainers:
    - bollwyvl
    - satra
